name: Release SDK

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'If true, simulate the commands without executing them'
        required: false
        default: 'true'

jobs:
  read-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          server-id: central
          server-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          server-password: ${{ secrets.MAVEN_CENTRAL_TOKEN }}

      - name: Extract version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Show extracted version
        run: echo "Current version is ${{ steps.get_version.outputs.version }}"

      - name: Extract release version
        id: extract_version
        run: |
          RAW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          RELEASE_VERSION=${RAW_VERSION/-SNAPSHOT/}
          echo "RELEASE_VERSION=$RELEASE_VERSION"
          echo "release-version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Set release version in pom.xml (temporary)
        run: |
          RELEASE_VERSION=${{ steps.extract_version.outputs.release-version }}
          echo "Temporarily setting version to $RELEASE_VERSION"
          mvn versions:set -DnewVersion=$RELEASE_VERSION
          mvn versions:commit

      - name: Confirm version after set
        run: mvn help:evaluate -Dexpression=project.version -q -DforceStdout

      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import
          mkdir -p ~/.gnupg
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo RELOADAGENT | gpg-connect-agent

      - name: Debug settings.xml (safe)
        run: |
          echo "Sanitized settings.xml:"
          cat ~/.m2/settings.xml
          
          echo ""
          echo "Preview secrets:"
          echo "MAVEN_CENTRAL_USERNAME starts with: ${MAVEN_CENTRAL_USERNAME:0:3}***"
          echo "MAVEN_CENTRAL_TOKEN starts with: ${MAVEN_CENTRAL_TOKEN:0:3}***"
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}


      - name: Deploy to Maven Central (with signing)
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "Running: mvn deploy -Psign-release -X"
          mvn deploy -Psign-release -X \
            -DskipTests=true \
            -DretryFailedDeploymentCount=3 \
            -Dmaven.wagon.http.timeout=120000 \
            -Dmaven.wagon.http.retryHandler.count=3 \
            -Dmaven.wagon.httpconnectionManager.maxPerHost=2 \
            -Dmaven.wagon.httpconnectionManager.ttlSeconds=60

      - name: Upload all artifacts (post-deploy)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-publish-output
          path: |
            target/central-publishing/central-bundle.zip
